DOM은 로우레벨(DOM : 브라우저에서 문서를 제어하기 위한 라이브러리)
요즘은 YUI 혹은 JQuery와 같은 API를 이용해서 DOM을 사용함.

자바스크립트로 제어하는 것들(호스트 환경)
1. WebBrowser
2. Node.js
3. GAS(Google Apps Script) : 구글에서 나오는 앱들을 제어하는 환경

초창기 웹은 웹브라우저가 웹서버에게 요청을 보내고 웹서버가 웹브라우저에게 html을 보내줌.

HTML : 정보
CSS  : 디자인
JavaScript : 웹브라우저, html 제어


*HTML에서 JavaScript 로드하기*
JavaScript랑 html이랑 완전히 구분 -> 유지 보수가 용이해 지고 웹 브라우저가 js파일을 캐쉬로 처리함으로써 서버와의 통신에서
트랙픽을 줄일 수 있다.

*객체화*
웹브라우저에서 제공하는 오브젝트들을 자바스크립으로 제어한다.
- 웹브라우저의 객체 관계
window(전역 객체) -> DOM(document) : 각종 html 태그들을 제어할 수 있는 객체
		  -> BOM-Browser object model(navigator, screen ...) : 브라우저의 기능들(URL, 경고)을 제어할 수 있는 객체
		  -> javaScriptCore(Object, Array, Function ....)

alert : 경고창 같은거
confirm : 경고창에 예, 아니오 있는거
prompt : 경고창에 입력창 있는거
location : 현재 웹페이지 속성이 담겨 있는 객체, url, protocol, pathname 등등
  ex) location = '주소'; 하면 해당 페이지로 넘어감.

egoing blog 주소 : http://egoing.net

navigator : 브라우저의 정보를 알 수 있는 객체

w3c : 국제 표준화 기구
ecma : 자바스크립트 표준화 기구
각 표준화 기구에서 브라우저 특성에 맞춰 코드를 만들어냄
크로스 브라우징 문제 : 각 브라우저마다 동작이 다르게 발생할 수 있는 문제 이러한 문제를 navigator객체로 해결한다고 함.
netscape에서 자바스크립트를 만들었다고 함.

console.log(location), console.dir(navigator)로 프로퍼티를 확인할 수 있음.

window.open으로 html a태그와 같이 동작할 수 있음. 새로운 창을 띄움.

getElementByTagName
getElementByClass
getElementById
querySelector
해당 태그, 클래스, 아이디와 연결되는 엘리먼트들을 가지고올 수 있음.

JQuery : JavaScript를 효율적으로 사용할 수 있도록 해주는 라이브러리